{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "8b0ff14d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting graphviz\n",
      "  Downloading graphviz-0.20.1-py3-none-any.whl (47 kB)\n",
      "Installing collected packages: graphviz\n",
      "Successfully installed graphviz-0.20.1\n"
     ]
    }
   ],
   "source": [
    "!pip install graphviz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f6640b15",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn\n",
    "import graphviz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7cdc704b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#read X_train first 3 rows for header\n",
    "df_X_header = pd.read_csv(\"X_train.csv\", dtype = str, nrows = 3,header = None)\n",
    "\n",
    "#combine df_X_header by row\n",
    "X_header = []\n",
    "for ic in range(len(df_X_header.columns)):\n",
    "    temp = \"\"\n",
    "    for ir in range(len(df_X_header)):\n",
    "        if(ir != 0):\n",
    "            temp += \"&\"\n",
    "        temp += df_X_header.iloc[ir,ic]\n",
    "    X_header.append(temp)\n",
    "    \n",
    "\n",
    "\n",
    "#read X_train csv files except first 3 rows \n",
    "X_train = pd.read_csv(\"X_train.csv\",\n",
    "                         skiprows = 3,\n",
    "                         header = None)\n",
    "\n",
    "X_valid = pd.read_csv(\"X_valid.csv\",\n",
    "                          skiprows = 3,\n",
    "                          header = None)\n",
    "\n",
    "#combine header and the data together\n",
    "X_train.columns = X_header\n",
    "\n",
    "#read Y_train csv file\n",
    "Y_train = pd.read_csv(\"Y_train.csv\")\n",
    "Y_valid = pd.read_csv(\"Y_valid.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2f321c2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(16760, 7489)\n",
      "(16760,)\n",
      "(16760, 7488)\n",
      "(16760, 2)\n"
     ]
    }
   ],
   "source": [
    "X_id = X_train.iloc[:,0]\n",
    "X_feat = X_train.iloc[:,1:]\n",
    "print(X_train.shape)\n",
    "print(X_id.shape)\n",
    "print(X_feat.shape)\n",
    "print(Y_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c7c170a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Select features with mean value:\n",
      "Original: 7488 \tSelected: 2496\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;1</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;2</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;3</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;4</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;5</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;6</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;7</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;8</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;9</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;10</th>\n",
       "      <th>...</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;15</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;16</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;17</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;18</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;19</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;20</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;21</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;22</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;23</th>\n",
       "      <th>white blood cell count urine&amp;time_since_measured&amp;0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.065219</td>\n",
       "      <td>-0.064588</td>\n",
       "      <td>-0.064803</td>\n",
       "      <td>-0.064101</td>\n",
       "      <td>-0.064031</td>\n",
       "      <td>-0.063712</td>\n",
       "      <td>-0.063905</td>\n",
       "      <td>-0.064175</td>\n",
       "      <td>-0.064640</td>\n",
       "      <td>-0.064856</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000300</td>\n",
       "      <td>-0.000252</td>\n",
       "      <td>-0.000329</td>\n",
       "      <td>-0.000262</td>\n",
       "      <td>-0.000249</td>\n",
       "      <td>-0.000257</td>\n",
       "      <td>-0.000282</td>\n",
       "      <td>-0.000300</td>\n",
       "      <td>-0.000448</td>\n",
       "      <td>269.869093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.423142</td>\n",
       "      <td>0.428927</td>\n",
       "      <td>0.427698</td>\n",
       "      <td>0.435464</td>\n",
       "      <td>0.436145</td>\n",
       "      <td>0.438468</td>\n",
       "      <td>0.435569</td>\n",
       "      <td>0.432840</td>\n",
       "      <td>0.426678</td>\n",
       "      <td>0.420549</td>\n",
       "      <td>...</td>\n",
       "      <td>0.339446</td>\n",
       "      <td>0.338852</td>\n",
       "      <td>0.338696</td>\n",
       "      <td>0.338709</td>\n",
       "      <td>0.338702</td>\n",
       "      <td>0.338702</td>\n",
       "      <td>0.338711</td>\n",
       "      <td>0.338711</td>\n",
       "      <td>0.338265</td>\n",
       "      <td>315.670695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>57.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>154.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>360.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>...</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>2232.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 2496 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       alanine aminotransferase&mean&1  alanine aminotransferase&mean&2  \\\n",
       "count                     16760.000000                     16760.000000   \n",
       "mean                         -0.065219                        -0.064588   \n",
       "std                           0.423142                         0.428927   \n",
       "min                          -0.279057                        -0.279057   \n",
       "25%                          -0.248043                        -0.248043   \n",
       "50%                           0.000000                         0.000000   \n",
       "75%                           0.000000                         0.000000   \n",
       "max                          10.413320                        10.413320   \n",
       "\n",
       "       alanine aminotransferase&mean&3  alanine aminotransferase&mean&4  \\\n",
       "count                     16760.000000                     16760.000000   \n",
       "mean                         -0.064803                        -0.064101   \n",
       "std                           0.427698                         0.435464   \n",
       "min                          -0.279057                        -0.279057   \n",
       "25%                          -0.248043                        -0.248043   \n",
       "50%                           0.000000                         0.000000   \n",
       "75%                           0.000000                         0.000000   \n",
       "max                          10.413320                        10.413320   \n",
       "\n",
       "       alanine aminotransferase&mean&5  alanine aminotransferase&mean&6  \\\n",
       "count                     16760.000000                     16760.000000   \n",
       "mean                         -0.064031                        -0.063712   \n",
       "std                           0.436145                         0.438468   \n",
       "min                          -0.279057                        -0.279057   \n",
       "25%                          -0.248043                        -0.248043   \n",
       "50%                           0.000000                         0.000000   \n",
       "75%                           0.000000                         0.000000   \n",
       "max                          10.413320                        10.413320   \n",
       "\n",
       "       alanine aminotransferase&mean&7  alanine aminotransferase&mean&8  \\\n",
       "count                     16760.000000                     16760.000000   \n",
       "mean                         -0.063905                        -0.064175   \n",
       "std                           0.435569                         0.432840   \n",
       "min                          -0.279057                        -0.279057   \n",
       "25%                          -0.248043                        -0.248043   \n",
       "50%                           0.000000                         0.000000   \n",
       "75%                           0.000000                         0.000000   \n",
       "max                          10.413320                        10.413320   \n",
       "\n",
       "       alanine aminotransferase&mean&9  alanine aminotransferase&mean&10  ...  \\\n",
       "count                     16760.000000                      16760.000000  ...   \n",
       "mean                         -0.064640                         -0.064856  ...   \n",
       "std                           0.426678                          0.420549  ...   \n",
       "min                          -0.279057                         -0.279057  ...   \n",
       "25%                          -0.248043                         -0.248043  ...   \n",
       "50%                           0.000000                          0.000000  ...   \n",
       "75%                           0.000000                          0.000000  ...   \n",
       "max                          10.413320                         10.413320  ...   \n",
       "\n",
       "       white blood cell count urine&mean&15  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000300   \n",
       "std                                0.339446   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&16  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000252   \n",
       "std                                0.338852   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&17  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000329   \n",
       "std                                0.338696   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&18  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000262   \n",
       "std                                0.338709   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&19  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000249   \n",
       "std                                0.338702   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&20  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000257   \n",
       "std                                0.338702   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&21  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000282   \n",
       "std                                0.338711   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&22  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000300   \n",
       "std                                0.338711   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&mean&23  \\\n",
       "count                          16760.000000   \n",
       "mean                              -0.000448   \n",
       "std                                0.338265   \n",
       "min                               -0.316046   \n",
       "25%                                0.000000   \n",
       "50%                                0.000000   \n",
       "75%                                0.000000   \n",
       "max                               11.783246   \n",
       "\n",
       "       white blood cell count urine&time_since_measured&0  \n",
       "count                                       16760.000000   \n",
       "mean                                          269.869093   \n",
       "std                                           315.670695   \n",
       "min                                             0.000000   \n",
       "25%                                            57.000000   \n",
       "50%                                           154.000000   \n",
       "75%                                           360.000000   \n",
       "max                                          2232.000000   \n",
       "\n",
       "[8 rows x 2496 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def featureSelectByMean(df_feat,df_header,cols = None):\n",
    "    if (cols == None):\n",
    "        cols = np.full((df_feat.shape[1],), False, dtype = bool)\n",
    "    for ic in range(len(df_header.columns)):\n",
    "        if (df_header.iloc[1,ic] == \"mean\"):\n",
    "            cols[ic] = True\n",
    "    \n",
    "    print(\"Select features with mean value:\")\n",
    "    print(\"Original:\",df_feat.shape[1],\"\\tSelected:\",np.sum(cols))        \n",
    "    return df_feat.iloc[:,cols]\n",
    "    \n",
    "\n",
    "X_feat = featureSelectByMean(X_feat,df_X_header)\n",
    "X_feat.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b282a0e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Select features by filtering features with high covariance (>= 0.9) :\n",
      "Original: 2496 \tSelected: 397\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;1</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;2</th>\n",
       "      <th>alanine aminotransferase&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin&amp;mean&amp;1</th>\n",
       "      <th>albumin&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin ascites&amp;mean&amp;1</th>\n",
       "      <th>albumin ascites&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin pleural&amp;mean&amp;1</th>\n",
       "      <th>albumin pleural&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin urine&amp;mean&amp;1</th>\n",
       "      <th>...</th>\n",
       "      <th>total protein urine&amp;time_since_measured&amp;0</th>\n",
       "      <th>troponin-i&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;time_since_measured&amp;0</th>\n",
       "      <th>venous pvo2&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;time_since_measured&amp;0</th>\n",
       "      <th>white blood cell count&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;time_since_measured&amp;0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>1.676000e+04</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>1.676000e+04</td>\n",
       "      <td>...</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "      <td>16760.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.065219</td>\n",
       "      <td>-0.064588</td>\n",
       "      <td>33.225000</td>\n",
       "      <td>0.034359</td>\n",
       "      <td>46.030847</td>\n",
       "      <td>1.848164e-18</td>\n",
       "      <td>6915.172375</td>\n",
       "      <td>0.000044</td>\n",
       "      <td>8732.591826</td>\n",
       "      <td>7.286667e-20</td>\n",
       "      <td>...</td>\n",
       "      <td>1559.202029</td>\n",
       "      <td>-0.002609</td>\n",
       "      <td>-0.025065</td>\n",
       "      <td>69.243735</td>\n",
       "      <td>-0.000489</td>\n",
       "      <td>-0.014655</td>\n",
       "      <td>27.429415</td>\n",
       "      <td>0.001104</td>\n",
       "      <td>-0.000158</td>\n",
       "      <td>269.869093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.423142</td>\n",
       "      <td>0.428927</td>\n",
       "      <td>38.602299</td>\n",
       "      <td>0.619799</td>\n",
       "      <td>50.040251</td>\n",
       "      <td>5.462116e-02</td>\n",
       "      <td>6261.763074</td>\n",
       "      <td>0.051822</td>\n",
       "      <td>8127.378115</td>\n",
       "      <td>5.516467e-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1779.006089</td>\n",
       "      <td>0.168234</td>\n",
       "      <td>0.504190</td>\n",
       "      <td>85.521628</td>\n",
       "      <td>0.123559</td>\n",
       "      <td>0.812038</td>\n",
       "      <td>35.051215</td>\n",
       "      <td>0.962887</td>\n",
       "      <td>0.338099</td>\n",
       "      <td>315.670695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-0.279057</td>\n",
       "      <td>-0.279057</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-3.131888</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.702985e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.312068</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-5.691630e-01</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.692272</td>\n",
       "      <td>-0.366371</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.765677</td>\n",
       "      <td>-3.517696</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.160785</td>\n",
       "      <td>-0.316046</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.248043</td>\n",
       "      <td>-0.248043</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>2157.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2232.750000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>398.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.405690</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>-0.414731</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>57.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>5146.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6192.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>984.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>-0.120972</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>154.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9888.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13056.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>2034.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>96.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.122018</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>0.228741</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>360.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>10.413320</td>\n",
       "      <td>10.413320</td>\n",
       "      <td>336.000000</td>\n",
       "      <td>3.492301</td>\n",
       "      <td>480.000000</td>\n",
       "      <td>3.469357e+00</td>\n",
       "      <td>31735.000000</td>\n",
       "      <td>1.613770</td>\n",
       "      <td>36853.000000</td>\n",
       "      <td>4.592960e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>11424.000000</td>\n",
       "      <td>3.830272</td>\n",
       "      <td>8.913147</td>\n",
       "      <td>768.000000</td>\n",
       "      <td>3.207278</td>\n",
       "      <td>7.198578</td>\n",
       "      <td>431.000000</td>\n",
       "      <td>54.802581</td>\n",
       "      <td>11.783246</td>\n",
       "      <td>2232.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 397 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       alanine aminotransferase&mean&1  alanine aminotransferase&mean&2  \\\n",
       "count                     16760.000000                     16760.000000   \n",
       "mean                         -0.065219                        -0.064588   \n",
       "std                           0.423142                         0.428927   \n",
       "min                          -0.279057                        -0.279057   \n",
       "25%                          -0.248043                        -0.248043   \n",
       "50%                           0.000000                         0.000000   \n",
       "75%                           0.000000                         0.000000   \n",
       "max                          10.413320                        10.413320   \n",
       "\n",
       "       alanine aminotransferase&time_since_measured&0  albumin&mean&1  \\\n",
       "count                                    16760.000000    16760.000000   \n",
       "mean                                        33.225000        0.034359   \n",
       "std                                         38.602299        0.619799   \n",
       "min                                          0.000000       -3.131888   \n",
       "25%                                          0.000000        0.000000   \n",
       "50%                                         23.000000        0.000000   \n",
       "75%                                         48.000000        0.000000   \n",
       "max                                        336.000000        3.492301   \n",
       "\n",
       "       albumin&time_since_measured&0  albumin ascites&mean&1  \\\n",
       "count                   16760.000000            1.676000e+04   \n",
       "mean                       46.030847            1.848164e-18   \n",
       "std                        50.040251            5.462116e-02   \n",
       "min                         0.000000           -1.702985e+00   \n",
       "25%                        11.000000            0.000000e+00   \n",
       "50%                        25.000000            0.000000e+00   \n",
       "75%                        69.000000            0.000000e+00   \n",
       "max                       480.000000            3.469357e+00   \n",
       "\n",
       "       albumin ascites&time_since_measured&0  albumin pleural&mean&1  \\\n",
       "count                           16760.000000            16760.000000   \n",
       "mean                             6915.172375                0.000044   \n",
       "std                              6261.763074                0.051822   \n",
       "min                                 0.000000               -2.312068   \n",
       "25%                              2157.000000                0.000000   \n",
       "50%                              5146.000000                0.000000   \n",
       "75%                              9888.000000                0.000000   \n",
       "max                             31735.000000                1.613770   \n",
       "\n",
       "       albumin pleural&time_since_measured&0  albumin urine&mean&1  ...  \\\n",
       "count                           16760.000000          1.676000e+04  ...   \n",
       "mean                             8732.591826          7.286667e-20  ...   \n",
       "std                              8127.378115          5.516467e-02  ...   \n",
       "min                                 0.000000         -5.691630e-01  ...   \n",
       "25%                              2232.750000          0.000000e+00  ...   \n",
       "50%                              6192.000000          0.000000e+00  ...   \n",
       "75%                             13056.000000          0.000000e+00  ...   \n",
       "max                             36853.000000          4.592960e+00  ...   \n",
       "\n",
       "       total protein urine&time_since_measured&0  troponin-i&mean&1  \\\n",
       "count                               16760.000000       16760.000000   \n",
       "mean                                 1559.202029          -0.002609   \n",
       "std                                  1779.006089           0.168234   \n",
       "min                                     0.000000          -0.692272   \n",
       "25%                                   398.000000           0.000000   \n",
       "50%                                   984.000000           0.000000   \n",
       "75%                                  2034.250000           0.000000   \n",
       "max                                 11424.000000           3.830272   \n",
       "\n",
       "       troponin-t&mean&1  troponin-t&time_since_measured&0  \\\n",
       "count       16760.000000                      16760.000000   \n",
       "mean           -0.025065                         69.243735   \n",
       "std             0.504190                         85.521628   \n",
       "min            -0.366371                          0.000000   \n",
       "25%             0.000000                         11.000000   \n",
       "50%             0.000000                         41.000000   \n",
       "75%             0.000000                         96.000000   \n",
       "max             8.913147                        768.000000   \n",
       "\n",
       "       venous pvo2&mean&1  weight&mean&1  weight&time_since_measured&0  \\\n",
       "count        16760.000000   16760.000000                  16760.000000   \n",
       "mean            -0.000489      -0.014655                     27.429415   \n",
       "std              0.123559       0.812038                     35.051215   \n",
       "min             -2.765677      -3.517696                      0.000000   \n",
       "25%              0.000000      -0.405690                      2.000000   \n",
       "50%              0.000000       0.000000                     21.000000   \n",
       "75%              0.000000       0.122018                     33.000000   \n",
       "max              3.207278       7.198578                    431.000000   \n",
       "\n",
       "       white blood cell count&mean&1  white blood cell count urine&mean&1  \\\n",
       "count                   16760.000000                         16760.000000   \n",
       "mean                        0.001104                            -0.000158   \n",
       "std                         0.962887                             0.338099   \n",
       "min                        -1.160785                            -0.316046   \n",
       "25%                        -0.414731                             0.000000   \n",
       "50%                        -0.120972                             0.000000   \n",
       "75%                         0.228741                             0.000000   \n",
       "max                        54.802581                            11.783246   \n",
       "\n",
       "       white blood cell count urine&time_since_measured&0  \n",
       "count                                       16760.000000   \n",
       "mean                                          269.869093   \n",
       "std                                           315.670695   \n",
       "min                                             0.000000   \n",
       "25%                                            57.000000   \n",
       "50%                                           154.000000   \n",
       "75%                                           360.000000   \n",
       "max                                          2232.000000   \n",
       "\n",
       "[8 rows x 397 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def featureSelectByCorr(df_feat,threshold = 0.9):\n",
    "    corr = df_feat.corr()\n",
    "    \n",
    "    cols = np.full((corr.shape[0],), True, dtype = bool)\n",
    "    for i in range(corr.shape[0],0,-1):\n",
    "        for j in range(i+1, corr.shape[0]):\n",
    "            if corr.iloc[i,j] >= threshold:\n",
    "                if(cols[j]):\n",
    "                    cols[j] = False\n",
    "    print(\"Select features by filtering features with high covariance\",\"(>= \"+str(threshold)+\")\",\":\")\n",
    "    print(\"Original:\",df_feat.shape[1],\"\\tSelected:\",np.sum(cols))\n",
    "    \n",
    "    return df_feat.iloc[:,cols]\n",
    "\n",
    "X_feat = featureSelectByCorr(X_feat,0.9)\n",
    "X_feat.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "55116824",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 16760 entries, 0 to 16759\n",
      "Columns: 397 entries, alanine aminotransferase&mean&1 to white blood cell count urine&time_since_measured&0\n",
      "dtypes: float64(397)\n",
      "memory usage: 50.8 MB\n"
     ]
    }
   ],
   "source": [
    "X_feat.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a6747077",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;1</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;2</th>\n",
       "      <th>alanine aminotransferase&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin&amp;mean&amp;1</th>\n",
       "      <th>albumin&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin ascites&amp;mean&amp;1</th>\n",
       "      <th>albumin ascites&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin pleural&amp;mean&amp;1</th>\n",
       "      <th>albumin pleural&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin urine&amp;mean&amp;1</th>\n",
       "      <th>...</th>\n",
       "      <th>total protein urine&amp;time_since_measured&amp;0</th>\n",
       "      <th>troponin-i&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;time_since_measured&amp;0</th>\n",
       "      <th>venous pvo2&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;time_since_measured&amp;0</th>\n",
       "      <th>white blood cell count&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;time_since_measured&amp;0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.254460</td>\n",
       "      <td>-0.254460</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-1.979855</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.026004</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.214086</td>\n",
       "      <td>0.160067</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.256599</td>\n",
       "      <td>-0.256599</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.251806</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-0.181589</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.269432</td>\n",
       "      <td>-0.269432</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>27.0</td>\n",
       "      <td>-0.470685</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.0</td>\n",
       "      <td>-0.302823</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>72.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.317391</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>75.0</td>\n",
       "      <td>-0.414731</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>88.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 397 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   alanine aminotransferase&mean&1  alanine aminotransferase&mean&2  \\\n",
       "0                        -0.254460                        -0.254460   \n",
       "1                        -0.256599                        -0.256599   \n",
       "2                        -0.269432                        -0.269432   \n",
       "3                         0.000000                         0.000000   \n",
       "4                         0.000000                         0.000000   \n",
       "\n",
       "   alanine aminotransferase&time_since_measured&0  albumin&mean&1  \\\n",
       "0                                             0.0       -1.979855   \n",
       "1                                             0.0       -0.251806   \n",
       "2                                            24.0        0.000000   \n",
       "3                                             4.0        0.000000   \n",
       "4                                            28.0        0.000000   \n",
       "\n",
       "   albumin&time_since_measured&0  albumin ascites&mean&1  \\\n",
       "0                            0.0                     0.0   \n",
       "1                            0.0                     0.0   \n",
       "2                           24.0                     0.0   \n",
       "3                           48.0                     0.0   \n",
       "4                           72.0                     0.0   \n",
       "\n",
       "   albumin ascites&time_since_measured&0  albumin pleural&mean&1  \\\n",
       "0                                  100.0                     0.0   \n",
       "1                                  100.0                     0.0   \n",
       "2                                  100.0                     0.0   \n",
       "3                                  100.0                     0.0   \n",
       "4                                  100.0                     0.0   \n",
       "\n",
       "   albumin pleural&time_since_measured&0  albumin urine&mean&1  ...  \\\n",
       "0                                  100.0                   0.0  ...   \n",
       "1                                  100.0                   0.0  ...   \n",
       "2                                  100.0                   0.0  ...   \n",
       "3                                  100.0                   0.0  ...   \n",
       "4                                  100.0                   0.0  ...   \n",
       "\n",
       "   total protein urine&time_since_measured&0  troponin-i&mean&1  \\\n",
       "0                                      100.0                0.0   \n",
       "1                                      100.0                0.0   \n",
       "2                                      100.0                0.0   \n",
       "3                                      100.0                0.0   \n",
       "4                                      100.0                0.0   \n",
       "\n",
       "   troponin-t&mean&1  troponin-t&time_since_measured&0  venous pvo2&mean&1  \\\n",
       "0           0.000000                             100.0                 0.0   \n",
       "1           0.000000                             100.0                 0.0   \n",
       "2           0.000000                             100.0                 0.0   \n",
       "3           0.000000                             100.0                 0.0   \n",
       "4          -0.317391                               0.0                 0.0   \n",
       "\n",
       "   weight&mean&1  weight&time_since_measured&0  white blood cell count&mean&1  \\\n",
       "0       1.026004                         100.0                       0.214086   \n",
       "1       0.000000                           3.0                      -0.181589   \n",
       "2       0.000000                          27.0                      -0.470685   \n",
       "3       0.000000                          51.0                      -0.302823   \n",
       "4       0.000000                          75.0                      -0.414731   \n",
       "\n",
       "   white blood cell count urine&mean&1  \\\n",
       "0                             0.160067   \n",
       "1                             0.000000   \n",
       "2                             0.000000   \n",
       "3                             0.000000   \n",
       "4                             0.000000   \n",
       "\n",
       "   white blood cell count urine&time_since_measured&0  \n",
       "0                                              100.0   \n",
       "1                                               16.0   \n",
       "2                                               40.0   \n",
       "3                                               64.0   \n",
       "4                                               88.0   \n",
       "\n",
       "[5 rows x 397 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_feat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "78bc8de8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>mort_icu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3_145834_211552</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6_107064_228232</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9_150750_220597</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11_194540_229441</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12_112213_232669</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16755</th>\n",
       "      <td>99966_167228_252173</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16756</th>\n",
       "      <td>99973_150202_275083</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16757</th>\n",
       "      <td>99982_151454_221194</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16758</th>\n",
       "      <td>99991_151118_226241</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16759</th>\n",
       "      <td>99995_137810_229633</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16760 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Unnamed: 0  mort_icu\n",
       "0          3_145834_211552         0\n",
       "1          6_107064_228232         0\n",
       "2          9_150750_220597         1\n",
       "3         11_194540_229441         0\n",
       "4         12_112213_232669         0\n",
       "...                    ...       ...\n",
       "16755  99966_167228_252173         0\n",
       "16756  99973_150202_275083         0\n",
       "16757  99982_151454_221194         0\n",
       "16758  99991_151118_226241         0\n",
       "16759  99995_137810_229633         0\n",
       "\n",
       "[16760 rows x 2 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "083df48f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;1</th>\n",
       "      <th>alanine aminotransferase&amp;mean&amp;2</th>\n",
       "      <th>alanine aminotransferase&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin&amp;mean&amp;1</th>\n",
       "      <th>albumin&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin ascites&amp;mean&amp;1</th>\n",
       "      <th>albumin ascites&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin pleural&amp;mean&amp;1</th>\n",
       "      <th>albumin pleural&amp;time_since_measured&amp;0</th>\n",
       "      <th>albumin urine&amp;mean&amp;1</th>\n",
       "      <th>...</th>\n",
       "      <th>total protein urine&amp;time_since_measured&amp;0</th>\n",
       "      <th>troponin-i&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;mean&amp;1</th>\n",
       "      <th>troponin-t&amp;time_since_measured&amp;0</th>\n",
       "      <th>venous pvo2&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;mean&amp;1</th>\n",
       "      <th>weight&amp;time_since_measured&amp;0</th>\n",
       "      <th>white blood cell count&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;mean&amp;1</th>\n",
       "      <th>white blood cell count urine&amp;time_since_measured&amp;0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.254460</td>\n",
       "      <td>-0.254460</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-1.979855</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.026004</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.214086</td>\n",
       "      <td>0.160067</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.256599</td>\n",
       "      <td>-0.256599</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.251806</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-0.181589</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.269432</td>\n",
       "      <td>-0.269432</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>27.0</td>\n",
       "      <td>-0.470685</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.0</td>\n",
       "      <td>-0.302823</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>72.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.317391</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>75.0</td>\n",
       "      <td>-0.414731</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>88.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16755</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.0</td>\n",
       "      <td>1.044231</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13486.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17616.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>86.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.361918</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.584864</td>\n",
       "      <td>22.0</td>\n",
       "      <td>-0.144286</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>72.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16756</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17640.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>110.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.366371</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.973702</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.452557</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>96.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16757</th>\n",
       "      <td>-0.260876</td>\n",
       "      <td>-0.260876</td>\n",
       "      <td>72.0</td>\n",
       "      <td>1.044231</td>\n",
       "      <td>42.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13534.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17664.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>134.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.443803</td>\n",
       "      <td>23.0</td>\n",
       "      <td>-0.682067</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16758</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13558.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17688.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>158.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>46.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.781214</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.633884</td>\n",
       "      <td>-0.303768</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16759</th>\n",
       "      <td>-0.243765</td>\n",
       "      <td>-0.243765</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>45.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13582.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17712.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>182.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.366371</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.605925</td>\n",
       "      <td>1.0</td>\n",
       "      <td>-0.405405</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16760 rows × 397 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       alanine aminotransferase&mean&1  alanine aminotransferase&mean&2  \\\n",
       "0                            -0.254460                        -0.254460   \n",
       "1                            -0.256599                        -0.256599   \n",
       "2                            -0.269432                        -0.269432   \n",
       "3                             0.000000                         0.000000   \n",
       "4                             0.000000                         0.000000   \n",
       "...                                ...                              ...   \n",
       "16755                         0.000000                         0.000000   \n",
       "16756                         0.000000                         0.000000   \n",
       "16757                        -0.260876                        -0.260876   \n",
       "16758                         0.000000                         0.000000   \n",
       "16759                        -0.243765                        -0.243765   \n",
       "\n",
       "       alanine aminotransferase&time_since_measured&0  albumin&mean&1  \\\n",
       "0                                                 0.0       -1.979855   \n",
       "1                                                 0.0       -0.251806   \n",
       "2                                                24.0        0.000000   \n",
       "3                                                 4.0        0.000000   \n",
       "4                                                28.0        0.000000   \n",
       "...                                               ...             ...   \n",
       "16755                                            24.0        1.044231   \n",
       "16756                                            48.0        0.000000   \n",
       "16757                                            72.0        1.044231   \n",
       "16758                                            11.0        0.000000   \n",
       "16759                                            35.0        0.000000   \n",
       "\n",
       "       albumin&time_since_measured&0  albumin ascites&mean&1  \\\n",
       "0                                0.0                     0.0   \n",
       "1                                0.0                     0.0   \n",
       "2                               24.0                     0.0   \n",
       "3                               48.0                     0.0   \n",
       "4                               72.0                     0.0   \n",
       "...                              ...                     ...   \n",
       "16755                           24.0                     0.0   \n",
       "16756                           18.0                     0.0   \n",
       "16757                           42.0                     0.0   \n",
       "16758                           21.0                     0.0   \n",
       "16759                           45.0                     0.0   \n",
       "\n",
       "       albumin ascites&time_since_measured&0  albumin pleural&mean&1  \\\n",
       "0                                      100.0                     0.0   \n",
       "1                                      100.0                     0.0   \n",
       "2                                      100.0                     0.0   \n",
       "3                                      100.0                     0.0   \n",
       "4                                      100.0                     0.0   \n",
       "...                                      ...                     ...   \n",
       "16755                                13486.0                     0.0   \n",
       "16756                                13510.0                     0.0   \n",
       "16757                                13534.0                     0.0   \n",
       "16758                                13558.0                     0.0   \n",
       "16759                                13582.0                     0.0   \n",
       "\n",
       "       albumin pleural&time_since_measured&0  albumin urine&mean&1  ...  \\\n",
       "0                                      100.0                   0.0  ...   \n",
       "1                                      100.0                   0.0  ...   \n",
       "2                                      100.0                   0.0  ...   \n",
       "3                                      100.0                   0.0  ...   \n",
       "4                                      100.0                   0.0  ...   \n",
       "...                                      ...                   ...  ...   \n",
       "16755                                17616.0                   0.0  ...   \n",
       "16756                                17640.0                   0.0  ...   \n",
       "16757                                17664.0                   0.0  ...   \n",
       "16758                                17688.0                   0.0  ...   \n",
       "16759                                17712.0                   0.0  ...   \n",
       "\n",
       "       total protein urine&time_since_measured&0  troponin-i&mean&1  \\\n",
       "0                                          100.0                0.0   \n",
       "1                                          100.0                0.0   \n",
       "2                                          100.0                0.0   \n",
       "3                                          100.0                0.0   \n",
       "4                                          100.0                0.0   \n",
       "...                                          ...                ...   \n",
       "16755                                       86.0                0.0   \n",
       "16756                                      110.0                0.0   \n",
       "16757                                      134.0                0.0   \n",
       "16758                                      158.0                0.0   \n",
       "16759                                      182.0                0.0   \n",
       "\n",
       "       troponin-t&mean&1  troponin-t&time_since_measured&0  \\\n",
       "0               0.000000                             100.0   \n",
       "1               0.000000                             100.0   \n",
       "2               0.000000                             100.0   \n",
       "3               0.000000                             100.0   \n",
       "4              -0.317391                               0.0   \n",
       "...                  ...                               ...   \n",
       "16755          -0.361918                              48.0   \n",
       "16756          -0.366371                               0.0   \n",
       "16757           0.000000                              22.0   \n",
       "16758           0.000000                              46.0   \n",
       "16759          -0.366371                              70.0   \n",
       "\n",
       "       venous pvo2&mean&1  weight&mean&1  weight&time_since_measured&0  \\\n",
       "0                     0.0       1.026004                         100.0   \n",
       "1                     0.0       0.000000                           3.0   \n",
       "2                     0.0       0.000000                          27.0   \n",
       "3                     0.0       0.000000                          51.0   \n",
       "4                     0.0       0.000000                          75.0   \n",
       "...                   ...            ...                           ...   \n",
       "16755                 0.0       0.584864                          22.0   \n",
       "16756                 0.0       0.973702                          23.0   \n",
       "16757                 0.0      -0.443803                          23.0   \n",
       "16758                 0.0       0.781214                           0.0   \n",
       "16759                 0.0      -0.605925                           1.0   \n",
       "\n",
       "       white blood cell count&mean&1  white blood cell count urine&mean&1  \\\n",
       "0                           0.214086                             0.160067   \n",
       "1                          -0.181589                             0.000000   \n",
       "2                          -0.470685                             0.000000   \n",
       "3                          -0.302823                             0.000000   \n",
       "4                          -0.414731                             0.000000   \n",
       "...                              ...                                  ...   \n",
       "16755                      -0.144286                             0.000000   \n",
       "16756                       0.452557                             0.000000   \n",
       "16757                      -0.682067                             0.000000   \n",
       "16758                      -0.633884                            -0.303768   \n",
       "16759                      -0.405405                             0.000000   \n",
       "\n",
       "       white blood cell count urine&time_since_measured&0  \n",
       "0                                                  100.0   \n",
       "1                                                   16.0   \n",
       "2                                                   40.0   \n",
       "3                                                   64.0   \n",
       "4                                                   88.0   \n",
       "...                                                  ...   \n",
       "16755                                               72.0   \n",
       "16756                                               96.0   \n",
       "16757                                              120.0   \n",
       "16758                                                0.0   \n",
       "16759                                               24.0   \n",
       "\n",
       "[16760 rows x 397 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_feat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "626aba69",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Task 2\n",
    "#Pass the score_function ‘f_classif’ and the number of features you want to keep in the ‘SelectKBest’ function and fit the X and y to the function:\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import f_classif\n",
    "uni = SelectKBest(score_func = f_classif, k = 5) #input the number of features, k=398 means we want to see the best 398 selection\n",
    "fit = uni.fit(X_feat, Y_train.iloc[:,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "dbb8f742",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['anion gap&mean&1',\n",
       " 'blood urea nitrogen&mean&1',\n",
       " 'glascow coma scale total&mean&1',\n",
       " 'lactate&mean&1',\n",
       " 'lactic acid&mean&1']"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get the feature name(s)\n",
    "X_feat.columns[fit.get_support(indices=True)].tolist()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d7cb660b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='lactate&mean&1', ylabel='mort_icu'>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot the scatterplot of the feature chosen with a regression line\n",
    "import seaborn as sns\n",
    "sns.regplot(x=X_feat['lactate&mean&1'], y=Y_train['mort_icu'], ci=None, line_kws={\"color\": \"red\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8313d963",
   "metadata": {},
   "outputs": [],
   "source": [
    "#get the array of two variable\n",
    "a=np.array(X_feat[['lactate&mean&1']])\n",
    "b=np.array(Y_train[['mort_icu']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a5f49188",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Slope of the Regression Line is :  [[0.06948778]]\n",
      "Intercept of Regression Line is :  [0.076688]\n",
      "MSE of Linear Regression on testing data is :  0.2563863592505499\n"
     ]
    }
   ],
   "source": [
    "#fit the regression model and get the rmse_test value\n",
    "import statsmodels.api as sm\n",
    "from sklearn.linear_model import LinearRegression\n",
    "lm = LinearRegression()\n",
    "lm.fit(a,b)\n",
    "print(\"Slope of the Regression Line is : \", lm.coef_)\n",
    "print(\"Intercept of Regression Line is : \",lm.intercept_)\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred_test = lm.predict(a)\n",
    "rmse_test = mean_squared_error(b, pred_test, squared=False)\n",
    "print(\"MSE of Linear Regression on testing data is : \",rmse_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "900b8569",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='lactic acid&mean&1', ylabel='mort_icu'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x=X_feat['lactic acid&mean&1'], y=Y_train['mort_icu'], ci=None, line_kws={\"color\": \"red\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0c45ee13",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Slope of the Regression Line is :  [[0.08512576]]\n",
      "Intercept of Regression Line is :  [0.07905631]\n",
      "MSE of Linear Regression on testing data is :  0.25650295540985124\n"
     ]
    }
   ],
   "source": [
    "#now try another feature\n",
    "c=np.array(X_feat[['blood urea nitrogen&mean&1']])\n",
    "lm1 = LinearRegression()\n",
    "lm1.fit(c,b)\n",
    "print(\"Slope of the Regression Line is : \", lm1.coef_)\n",
    "print(\"Intercept of Regression Line is : \",lm1.intercept_)\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred_test = lm1.predict(c)\n",
    "rmse_test = mean_squared_error(b, pred_test, squared=False)\n",
    "print(\"MSE of Linear Regression on testing data is : \",rmse_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "cf7f7a57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='blood urea nitrogen&mean&1', ylabel='mort_icu'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x=X_feat['blood urea nitrogen&mean&1'], y=Y_train['mort_icu'], ci=None, line_kws={\"color\": \"red\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9ac4502b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Slope of the Regression Line is :  [[0.03405239]]\n",
      "Intercept of Regression Line is :  [0.07399564]\n",
      "MSE of Linear Regression on testing data is :  0.25820198367571695\n"
     ]
    }
   ],
   "source": [
    "d=np.array(X_feat[['blood urea nitrogen&mean&1']])\n",
    "lm2 = LinearRegression()\n",
    "lm2.fit(d,b)\n",
    "print(\"Slope of the Regression Line is : \", lm2.coef_)\n",
    "print(\"Intercept of Regression Line is : \",lm2.intercept_)\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred_test = lm2.predict(d)\n",
    "rmse_test = mean_squared_error(b, pred_test, squared=False)\n",
    "print(\"MSE of Linear Regression on testing data is : \",rmse_test)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
